#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 71 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1           0 135 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 171
(
 #"#reader(lib \"htdp-beginner-reader.ss\" \"lang\")((modname |29|) (re"
 #"ad-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructo"
 #"r repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"extras.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"21.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; group-photo : ListOfImages -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; GIVEN : A list of images"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; RETURNS : A combined image of all images in the list"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; Examples : "
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; (group-photo (list (person-image 1) (person-image 2))) -> "
0 12           4 17 2896
(
 #"(#(struct:overlay #(struct:translate 0 90 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 11 0 #(struct:tran"
 #"slate 10 10 #(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:transl"
 #"ate 0 20 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 15 0) #(struct:point 15 10) #(struct:po"
 #"int 0 10)) 255 \"black\"))) #(struct:translate 15 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 12 0) #("
 #"struct:point 12 40) #(struct:point 0 40)) 255 \"yellow\"))))) #(stru"
 #"ct:translate 27 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 15 0) #(struct:point 15 10) #(struct:point"
 #" 0 10)) 255 \"black\"))))))) #(struct:translate 15 60 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:"
 #"point 4 0) #(struct:point 4 30) #(struct:point 0 30)) 255 \"red\")))"
 #" #(struct:translate 4 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 4 0) #(struct:point 4 30) #(struct:p"
 #"oint 0 30)) 255 \"white\"))))) #(struct:translate 8 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 4 0) #"
 #"(struct:point 4 30) #(struct:point 0 30)) 255 \"red\"))))))) #(struc"
 #"t:translate 42 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 22 "
 #"0 #(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"blue\"))) "
 #"#(struct:translate 0 40 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 "
 #"20) #(struct:point 0 20)) 255 \"black\"))) #(struct:translate 30 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct"
 #":point 24 0) #(struct:point 24 80) #(struct:point 0 80)) 255 \"yello"
 #"w\"))))) #(struct:translate 54 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 20)"
 #" #(struct:point 0 20)) 255 \"black\"))))))) #(struct:translate 30 12"
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:poin"
 #"t 0 0) #(struct:point 8 0) #(struct:point 8 60) #(struct:point 0 60)"
 #") 255 \"red\"))) #(struct:translate 8 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 8 0) #(struct:point "
 #"8 60) #(struct:point 0 60)) 255 \"white\"))))) #(struct:translate 16"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 8 0) #(struct:point 8 60) #(struct:point 0 60)) 255 \"red"
 #"\"))))))) #(struct:translate 84 180 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)"
 #" #(struct:point 0 0)) 255 \"black\")))))) #(struct:bb 126 180 180) #"
 #"f)"
) 0 0 24 29 1 #"\n"
0 0 17 3 94
(
 #";;(group-photo (list (person-image 0) (person-image 1) (person-image"
 #" 2) (person-image 1))) -> "
) 0 12           4 17 5595
(
 #"(#(struct:overlay #(struct:translate 0 180 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:ellipse 0 0 0 255 \"blue\"))) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:po"
 #"int 0 0) #(struct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)"
 #") 255 \"black\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 0 0) #(struct:poin"
 #"t 0 0) #(struct:point 0 0)) 255 \"yellow\"))))) #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)) 255 \"black"
 #"\"))))))) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 0 0) #(struct:p"
 #"oint 0 0) #(struct:point 0 0)) 255 \"red\"))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)) 255 \"white\""
 #"))))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:point 0 0) #(struct:point 0 0) #(struct:point 0 0) #(stru"
 #"ct:point 0 0)) 255 \"red\"))))))) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 90 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 11 0 #(struct:translate 10 10 "
 #"#(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:translate 0 20 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 15 0) #(struct:point 15 10) #(struct:point 0 10)) 2"
 #"55 \"black\"))) #(struct:translate 15 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 12 0) #(struct:point"
 #" 12 40) #(struct:point 0 40)) 255 \"yellow\"))))) #(struct:translate"
 #" 27 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #"
 #"(struct:point 15 0) #(struct:point 15 10) #(struct:point 0 10)) 255 "
 #"\"black\"))))))) #(struct:translate 15 60 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 4 0) #"
 #"(struct:point 4 30) #(struct:point 0 30)) 255 \"red\"))) #(struct:tr"
 #"anslate 4 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 4 0) #(struct:point 4 30) #(struct:point 0 30)) "
 #"255 \"white\"))))) #(struct:translate 8 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 4 0) #(struct:poin"
 #"t 4 30) #(struct:point 0 30)) 255 \"red\"))))))) #(struct:translate "
 #"42 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 22 0 #(struct:t"
 #"ranslate 20 20 #(struct:ellipse 40 40 0 255 \"blue\"))) #(struct:tra"
 #"nslate 0 40 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 30 0) #(struct:point 30 20) #(struct"
 #":point 0 20)) 255 \"black\"))) #(struct:translate 30 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 24 0)"
 #" #(struct:point 24 80) #(struct:point 0 80)) 255 \"yellow\"))))) #(s"
 #"truct:translate 54 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 30 0) #(struct:point 30 20) #(struct:po"
 #"int 0 20)) 255 \"black\"))))))) #(struct:translate 30 120 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(str"
 #"uct:point 8 0) #(struct:point 8 6"
 #"0) #(struct:point 0 60)) 255 \"red\"))) #(struct:translate 8 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 8 0) #(struct:point 8 60) #(struct:point 0 60)) 255 \"white\"))))"
 #") #(struct:translate 16 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:point 0 0) #(struct:point 8 0) #(struct:point 8 60) #(struct"
 #":point 0 60)) 255 \"red\"))))))) #(struct:translate 84 90 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 11 0 #(struct:translate 10 10 "
 #"#(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:translate 0 20 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 15 0) #(struct:point 15 10) #(struct:point 0 10)) 2"
 #"55 \"black\"))) #(struct:translate 15 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 12 0) #(struct:point"
 #" 12 40) #(struct:point 0 40)) 255 \"yellow\"))))) #(struct:translate"
 #" 27 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #"
 #"(struct:point 15 0) #(struct:point 15 10) #(struct:point 0 10)) 255 "
 #"\"black\"))))))) #(struct:translate 15 60 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 4 0) #"
 #"(struct:point 4 30) #(struct:point 0 30)) 255 \"red\"))) #(struct:tr"
 #"anslate 4 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 4 0) #(struct:point 4 30) #(struct:point 0 30)) "
 #"255 \"white\"))))) #(struct:translate 8 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 4 0) #(struct:poin"
 #"t 4 30) #(struct:point 0 30)) 255 \"red\"))))))) #(struct:translate "
 #"42 90 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #"
 #"(struct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)) 255 \"bl"
 #"ack\")))))))))) #(struct:bb 168 180 180) #f)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"group-photo"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 14 3 11 #"empty-image"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"beside/align"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"bottom\""
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 11 #"group-photo"
0 0 24 3 1 #"("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";;tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"group-photo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"person-image"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"person-image"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))) "
0 12           4 4 2896
(
 #"(#(struct:overlay #(struct:translate 0 90 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 11 0 #(struct:tran"
 #"slate 10 10 #(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:transl"
 #"ate 0 20 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 15 0) #(struct:point 15 10) #(struct:po"
 #"int 0 10)) 255 \"black\"))) #(struct:translate 15 0 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 12 0) #("
 #"struct:point 12 40) #(struct:point 0 40)) 255 \"yellow\"))))) #(stru"
 #"ct:translate 27 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"point 0 0) #(struct:point 15 0) #(struct:point 15 10) #(struct:point"
 #" 0 10)) 255 \"black\"))))))) #(struct:translate 15 60 #(struct:overl"
 #"ay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 0 #("
 #"struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:"
 #"point 4 0) #(struct:point 4 30) #(struct:point 0 30)) 255 \"red\")))"
 #" #(struct:translate 4 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 4 0) #(struct:point 4 30) #(struct:p"
 #"oint 0 30)) 255 \"white\"))))) #(struct:translate 8 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 4 0) #"
 #"(struct:point 4 30) #(struct:point 0 30)) 255 \"red\"))))))) #(struc"
 #"t:translate 42 0 #(struct:overlay #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 22 "
 #"0 #(struct:translate 20 20 #(struct:ellipse 40 40 0 255 \"blue\"))) "
 #"#(struct:translate 0 40 #(struct:overlay #(struct:translate 0 0 #(st"
 #"ruct:overlay #(struct:translate 0 0 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 "
 #"20) #(struct:point 0 20)) 255 \"black\"))) #(struct:translate 30 0 #"
 #"(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct"
 #":point 24 0) #(struct:point 24 80) #(struct:point 0 80)) 255 \"yello"
 #"w\"))))) #(struct:translate 54 0 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:point 0 0) #(struct:point 30 0) #(struct:point 30 20)"
 #" #(struct:point 0 20)) 255 \"black\"))))))) #(struct:translate 30 12"
 #"0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:poin"
 #"t 0 0) #(struct:point 8 0) #(struct:point 8 60) #(struct:point 0 60)"
 #") 255 \"red\"))) #(struct:translate 8 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 8 0) #(struct:point "
 #"8 60) #(struct:point 0 60)) 255 \"white\"))))) #(struct:translate 16"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 8 0) #(struct:point 8 60) #(struct:point 0 60)) 255 \"red"
 #"\"))))))) #(struct:translate 84 180 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)"
 #" #(struct:point 0 0)) 255 \"black\")))))) #(struct:bb 126 180 180) #"
 #"f)"
) 0 0 24 3 1 #" "
0 0 19 3 28 #"\"Not the right image height\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 11 #"group-photo"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"person-image"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #") ("
0 0 14 3 12 #"person-image"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 12 #"person-image"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"person-image"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #"))) "
0 12           4 4 5595
(
 #"(#(struct:overlay #(struct:translate 0 180 #(struct:overlay #(struct"
 #":translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:tran"
 #"slate 0 0 #(struct:ellipse 0 0 0 255 \"blue\"))) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:po"
 #"int 0 0) #(struct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)"
 #") 255 \"black\"))) #(struct:translate 0 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 0 0) #(struct:poin"
 #"t 0 0) #(struct:point 0 0)) 255 \"yellow\"))))) #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(st"
 #"ruct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)) 255 \"black"
 #"\"))))))) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translate 0 0 "
 #"#(struct:polygon (#(struct:point 0 0) #(struct:point 0 0) #(struct:p"
 #"oint 0 0) #(struct:point 0 0)) 255 \"red\"))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(stru"
 #"ct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)) 255 \"white\""
 #"))))) #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:point 0 0) #(struct:point 0 0) #(struct:point 0 0) #(stru"
 #"ct:point 0 0)) 255 \"red\"))))))) #(struct:translate 0 0 #(struct:ov"
 #"erlay #(struct:translate 0 90 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 11 0 #(struct:translate 10 10 "
 #"#(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:translate 0 20 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 15 0) #(struct:point 15 10) #(struct:point 0 10)) 2"
 #"55 \"black\"))) #(struct:translate 15 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 12 0) #(struct:point"
 #" 12 40) #(struct:point 0 40)) 255 \"yellow\"))))) #(struct:translate"
 #" 27 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #"
 #"(struct:point 15 0) #(struct:point 15 10) #(struct:point 0 10)) 255 "
 #"\"black\"))))))) #(struct:translate 15 60 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 4 0) #"
 #"(struct:point 4 30) #(struct:point 0 30)) 255 \"red\"))) #(struct:tr"
 #"anslate 4 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 4 0) #(struct:point 4 30) #(struct:point 0 30)) "
 #"255 \"white\"))))) #(struct:translate 8 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 4 0) #(struct:poin"
 #"t 4 30) #(struct:point 0 30)) 255 \"red\"))))))) #(struct:translate "
 #"42 0 #(struct:overlay #(struct:translate 0 0 #(struct:overlay #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 22 0 #(struct:t"
 #"ranslate 20 20 #(struct:ellipse 40 40 0 255 \"blue\"))) #(struct:tra"
 #"nslate 0 40 #(struct:overlay #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(s"
 #"truct:point 0 0) #(struct:point 30 0) #(struct:point 30 20) #(struct"
 #":point 0 20)) 255 \"black\"))) #(struct:translate 30 0 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 24 0)"
 #" #(struct:point 24 80) #(struct:point 0 80)) 255 \"yellow\"))))) #(s"
 #"truct:translate 54 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:point 0 0) #(struct:point 30 0) #(struct:point 30 20) #(struct:po"
 #"int 0 20)) 255 \"black\"))))))) #(struct:translate 30 120 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(str"
 #"uct:point 8 0) #(struct:point 8 6"
 #"0) #(struct:point 0 60)) 255 \"red\"))) #(struct:translate 8 0 #(str"
 #"uct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:poi"
 #"nt 8 0) #(struct:point 8 60) #(struct:point 0 60)) 255 \"white\"))))"
 #") #(struct:translate 16 0 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:point 0 0) #(struct:point 8 0) #(struct:point 8 60) #(struct"
 #":point 0 60)) 255 \"red\"))))))) #(struct:translate 84 90 #(struct:o"
 #"verlay #(struct:translate 0 0 #(struct:overlay #(struct:translate 0 "
 #"0 #(struct:overlay #(struct:translate 11 0 #(struct:translate 10 10 "
 #"#(struct:ellipse 20 20 0 255 \"blue\"))) #(struct:translate 0 20 #(s"
 #"truct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0"
 #") #(struct:point 15 0) #(struct:point 15 10) #(struct:point 0 10)) 2"
 #"55 \"black\"))) #(struct:translate 15 0 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:point 0 0) #(struct:point 12 0) #(struct:point"
 #" 12 40) #(struct:point 0 40)) 255 \"yellow\"))))) #(struct:translate"
 #" 27 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #"
 #"(struct:point 15 0) #(struct:point 15 10) #(struct:point 0 10)) 255 "
 #"\"black\"))))))) #(struct:translate 15 60 #(struct:overlay #(struct:"
 #"translate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:trans"
 #"late 0 0 #(struct:polygon (#(struct:point 0 0) #(struct:point 4 0) #"
 #"(struct:point 4 30) #(struct:point 0 30)) 255 \"red\"))) #(struct:tr"
 #"anslate 4 0 #(struct:translate 0 0 #(struct:polygon (#(struct:point "
 #"0 0) #(struct:point 4 0) #(struct:point 4 30) #(struct:point 0 30)) "
 #"255 \"white\"))))) #(struct:translate 8 0 #(struct:translate 0 0 #(s"
 #"truct:polygon (#(struct:point 0 0) #(struct:point 4 0) #(struct:poin"
 #"t 4 30) #(struct:point 0 30)) 255 \"red\"))))))) #(struct:translate "
 #"42 90 #(struct:translate 0 0 #(struct:polygon (#(struct:point 0 0) #"
 #"(struct:point 0 0) #(struct:point 0 0) #(struct:point 0 0)) 255 \"bl"
 #"ack\")))))))))) #(struct:bb 168 180 180) #f)"
) 0 0 19 3 28 #"\"Not the right image height\""
0 0 24 3 2 #"))"
0           0
