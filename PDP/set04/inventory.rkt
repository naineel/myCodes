#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 31 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 79 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 19 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
          0 3367 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 187
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e inventory) (read-case-sensitive #t) (teachpacks ()) (htdp-settings"
 #" #(#t constructor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 68
#";; Given an inventoy of a book store which is a list of books where "
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; each book ISBN is unique in the inventory.We can manipulate the i"
 #"nventory "
) 0 0 24 29 1 #"\n"
0 0 17 3 52 #";; and handle orders which are a list of line items."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"extras.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 8 #"rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 1 #" "
0 0 14 3 26 #"inventory-potential-profit"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 22 #"inventory-total-volume"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 19 #"price-for-line-item"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 13 #"fillable-now?"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 17 #"days-til-fillable"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"price-for-order"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 21 #"inventory-after-order"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 15 #"increase-prices"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 9 #"make-book"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 14 #"make-line-item"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 16 #"reorder-present?"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 18 #"make-empty-reorder"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 12 #"make-reorder"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 14 3 26 #"inventory-after-deliveries"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 20 #";;; DATA DEFINITIONS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #" ("
0 0 14 3 4 #"isbn"
0 0 24 3 1 #" "
0 0 14 3 5 #"title"
0 0 24 3 1 #" "
0 0 14 3 6 #"author"
0 0 24 3 1 #" "
0 0 14 3 9 #"publisher"
0 0 24 3 1 #" "
0 0 14 3 10 #"unit-price"
0 0 24 3 1 #" "
0 0 14 3 9 #"unit-cost"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 13 #"reorderstatus"
0 0 24 3 1 #" "
0 0 14 3 4 #"cuft"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";; A Book is a "
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; make-book(Integer String String String NonNegInt NonNegInt NonNeg"
 #"Int "
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";;           ReorderStatus PosReal)"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Interpretation:"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; isbn is the 8 digit unique isbn number of the book."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; title is the title of the book."
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; author is the author of the book."
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; publisher is the publisher of the book."
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; unit-price is the price at which the book is sold given as USD*10"
 #"0."
) 0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; unit cost is the cost of the book to the bookstore given as USD*1"
 #"00."
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; num is the number of copies on hand."
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; reorderstatus is either false or gives the reorder status of the "
 #"book."
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #";; cuft is the volume taken up by the book in cubic feet."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; book-fn : Book -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; (define(book-fn b)"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";;   (...(book-isbn b) (book-title b) (book-author b) (book-publishe"
 #"r b)"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";;       (book-unit-price b) (book-unit-cost b) (book-num b) "
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;       (book-reorderstatus b)"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;       (book-cuft b)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; An Inventory is either"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; -- empty interp: Inventory is empty"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; -- (cons Book Inventory) interp : Inventory contains books"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; WHERE : ISBN of a book is unique and not repeated."
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; template:"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; inventory-fn : Inventory -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; (define (inventory-fn invent)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;     [(empty? invent) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;     [else (..."
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;             (book-fn (first invent))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;             (inventory-fn (rest invent)))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; A MaybeBook is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; -- false interp : book not present"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; -- Book interp : it is a book"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; template:"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; maybebook-fn : MaybeBook -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; (define (maybebook-fn b)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;     [(false? b)...]"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;     [(book? b)...]))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";; A ReorderStatus is one of"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; -- false     interp: If reorder is not present"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; -- Reorder   interp : If reorder is present"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; and defined according to the structure"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; template :"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; reorderstatus-fn : ReorderStatus -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; (define (reorderstatus-fn rs)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;     [(false? rs)...]"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;     [(reorder? rs)...]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"reorder"
0 0 24 3 2 #" ("
0 0 14 3 4 #"days"
0 0 24 3 1 #" "
0 0 14 3 6 #"copies"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; A Reorder is a make-reorder(PosInt PosInt)"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Interpretation :"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; days is the number of days until the next shipment of books."
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; copies is the number of copies expected to arrive at that time."
0 0 24 29 1 #"\n"
0 0 17 3 13 #";; template :"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; reorder-fn : Reorder -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; (define (reorder-fn r)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;   (...(reorder-days r) (reorder-copies r))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"lineitem"
0 0 24 3 2 #" ("
0 0 14 3 4 #"isbn"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; A LineItem is (make-lineitem Integer PosInt)"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Interpretation:"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; isbn is the 8 digit unique identifier for books."
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; num is the quantity to be ordered."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; template:"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; lineitem-fn : LineItem -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; (define(lineitem-fn l)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;   (...(lineitem-isbn l) (lineitem-num l)))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; An Order is either"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; -- empty interp : There are no items to order"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; -- (cons LineItem Order) interp : Order is present and "
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;                                   its a list of line items"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";; order-fn : Order -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; (define (order-fn l)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;     [(empty? l) ...]"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;     [else (..."
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;             (lineitem-fn (first l))"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;             (order-fn (rest l)))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";; A MaybeInteger is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; -- Integer interp : any integer value"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; -- false interp : it is false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; template:"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; maybeinteger-fn : MaybeInteger -> ??"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; (define (maybeinteger-fn mi)"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   (cond"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;     [(integer? mi)...]"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;     [(false? mi)...]))"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";;"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;; END OF DATA DEFINITIONS"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;; CONSTANTS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"HtDP/1\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Felleisen\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 21 3 4 #"1300"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"65488765"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"EOPL\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Wand\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"MIT Press\""
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"32154988"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Hamlet\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Shakespeare\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 3 1 #" "
0 0 21 3 4 #"1055"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 21 3 3 #"7.8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"64978561"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Macbeth\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Shakespeare\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"publication 2\""
0 0 24 3 1 #" "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.3"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Order"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"65488765"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"32154988"
0 0 24 3 1 #" "
0 0 21 3 2 #"75"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"64978561"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Order2"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"65488765"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Order1"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"64378581"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"65488765"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"32154988"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"64978561"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"64978581"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"Order3"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"65488765"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"   ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;; END OF CONSTANTS"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 53 #";; inventory-potential-profit : Inventory ->  Integer"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; GIVEN: an inventory"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURNS: the total profit, in USD*100,for all the items in stock "
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; (i.e., how much the bookstore would profit if it sold every book "
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; in the inventory)."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; STRATEGY : HOFC"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"inventory-potential-profit"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 11 #"book-profit"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; book-profit : Book -> Integer"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; GIVEN : A book."
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; RETURNS : profit of the book."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; STRATEGY : Structural Decomposition on b : Book."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"book-profit"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 8 #"book-num"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"book-mar"
0 0 14 3 1 #"k"
0 0 14 3 8 #"et-price"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 14 #"book-unit-cost"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; book-market-price : Book -> Integer"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; GIVEN : A book"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; RETURNS : the unit price of the book"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"book-market-price"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"book-unit-price"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";; inventory-total-volume : Inventory -> Real"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; GIVEN: An inventory"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; RETURNS: the total volume needed to store all the books in the in"
 #"ventory."
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; STRATEGY : HOFC"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"inventory-total-volume"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 17 #"book-total-volume"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; book-total-volume : Book -> Real"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; GIVEN : A book."
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; RETURNS : the volume of that book."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY : structural decomposition on book : Book."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"book-total-volume"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 9 #"book-cuft"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 8 #"book-num"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 26 #"inventory-potential-profit"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 6 #"202300"
0 0 24 3 1 #" "
0 0 19 3 45 #"\"Check the potential profit of the inventory\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 22 #"inventory-total-volume"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 3 #"620"
0 0 24 3 1 #" "
0 0 19 3 27 #"\"Check volume of each book\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";; line-item-number : LineItem -> Integer"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; GIVEN : A Lineitem"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; RETURNS : quantity of books ordered"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"line-item-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"lineitem-num"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; line-item-for-isbn : LineItem -> Integer"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; GIVEN : A lineitem"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; RETURN : ISBN number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"line-item-for-isbn"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"lineitem-isbn"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; get-number-of-copies : ReorderStatus -> Integer"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; GIVEN : reorderstatus"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; RETURN : number of copies "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"get-number-of-copies"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"reorder-copies"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; get-number-of-days : ReorderStatus -> Integer"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; GIVEN : reorderstatus"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; RETURN : number of days"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-number-of-days"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"reorder-days"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";; price-for-line-item : Inventory LineItem -> MaybeInteger"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; GIVEN: an inventory and a line item."
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; RETURNS: the price for that line item (the quantity times the uni"
 #"t"
) 0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; price for that item).  Returns false if that isbn does not exist "
 #"in"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";; the inventory."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See the tests below."
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; STRATEGY : Structural decomposition on item : LineItem."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 11 #"item-found?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"*"
0 0 24 3 2 #" ("
0 0 14 3 17 #"book-market-price"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-book"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 12 #"lineitem-num"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; get-book : LineItem Inventory -> Book"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; GIVEN : A lineitem and an Inventory"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; RETURNS : A book which has the matched isbn with the lineitem."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; STRATEGY : Function Compostion."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-book"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 12 #"matched-item"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; matched-item : LineItem Inventory -> MaybeBook"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; GIVEN : A lineitem and an inventory"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; RETURNS : A book iff the lineitem is present in the inventory"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; STRATEGY : Structural Decomposition [Book]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"matched-item"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #";; compare-isbn? : Item Inventory -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 38 #";; GIVEN : A lineitem and an inventory"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 55 #";; RETURNS : True iff the isbn of the item matches the "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 25 #";; isbn of the inventory."
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"compare-isbn-number?"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"line-item-for-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 20 #"compare-isbn-number?"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; item-found? : LineItem Inventory -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; GIVEN : A lineitem and an inventory"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURNS : true iff the isbn of the line item matches the inventor"
 #"y book."
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; STRATEGY : Structural decomposition on [book]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"item-found?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 34 #";; compare-isbn? : Book -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 17 #";; GIVEN : A book"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 61
#";; RETURNS : true iff the lineitem isbn matches the book isbn"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"compare-isbn?"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"line-item-for-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 13 #"compare-isbn?"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"64978561"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 6 #"120000"
0 0 24 3 1 #" "
0 0 19 3 52 #"\"Price for line item..Check item price and quantity\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 19 #"price-for-line-item"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"64958561"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 45 #"\"Price for line item Check if item ISBN is in"
0 0 19 29 1 #"\n"
0 0 19 3 15 #" the Inventory\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";; fillable-now? : Order Inventory -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN : An order and an Inventory"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS : True iff the order is fillable using the inventory stoc"
 #"k."
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See test cases below"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; STRATEGY : HOFC"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"fillable-now?"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 22 #";; LineItem -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 21 #";; GIVEN : A lineitem"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 69
(
 #";; RETURNS : True iff line item quantity is fillable using inventory"
 #"."
) 0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"li"
0 0 24 3 3 #") ("
0 0 14 3 22 #"line-item-in-inventory"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"order"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; line-item-in-inventory : LineItem Inventory -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; GIVEN : A lineitem and an inventory."
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; RETURNS : True iff line item quantity is fillable using the inven"
 #"tory."
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See test case below."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY : Function Composition."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"line-item-in-inventory"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"compare-isbn?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 19 #"check-book-quantity"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-book"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; compare-isbn? : LineItem Inventory -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; GIVEN : A lineitem and an inventory"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; RETURNS : True iff the lineitem is present in the inventory."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See test case below."
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; STRATEGY : Strctural decomposition on book : Book"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"compare-isbn?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 29 #";; compare? : Book -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 17 #";; GIVEN : A book"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 64
#";; RETURNS : True iff the isbn of the book matches the line-item"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"compare?"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"line-item-for-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 8 #"compare?"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; check-book-quantity : LineItem Book -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; GIVEN : A lineitem and a book."
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURNS : True iff the quantity of line item is greater than the "
 #"book"
) 0 0 24 29 1 #"\n"
0 0 17 3 29 #";; quantity in the inventory."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See test case below."
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY : Structural decomposition on book : Book."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"check-book-quantity"
0 0 24 3 1 #" "
0 0 14 3 8 #"lineitem"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"book-num"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 21 #"quantity-of-line-item"
0 0 24 3 1 #" "
0 0 14 3 8 #"lineitem"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; quantity-of-line-item : LineItem -> Integer"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; GIVEN : A lineitem"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; RETURNS : the quantity for the particular lineitem"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"quantity-of-line-item"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"lineitem-num"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"fillable-now?"
0 0 24 3 1 #" "
0 0 14 3 6 #"Order3"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Order should be "
0 0 19 29 1 #"\n"
0 0 19 3 26 #" fillable check the order\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"fillable-now?"
0 0 24 3 1 #" "
0 0 14 3 5 #"Order"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 13 #"fillable-now?"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 23 #" Check the order again\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"fillable-now?"
0 0 24 3 1 #" "
0 0 14 3 5 #"Order"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 1 #" "
0 0 19 3 13 #"fillable-now?"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 17 #" inventory empty\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";; days-til-fillable : Order Inventory -> MaybeInteger"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; GIVEN: an order and an inventory"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURNS: the number of days until the order is fillable, assuming"
 #" all"
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; the shipments come in on time.  Returns false if there won't be e"
 #"nough"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; copies of some book, even after the next shipment of that book co"
 #"mes in."
) 0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples: see test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; STRATEGY : Function composition. "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-member"
0 0 24 3 1 #"("
0 0 14 3 24 #"no-of-days-till-fillable"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; check-member : List -> MaybeInteger"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; GIVEN : A list."
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURNS : If list contains false it will return false otherwise i"
 #"t will "
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";; return the maximum value from the list."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY : Function Composition."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"check-member"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 7 #"member?"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 13 #"maximum-value"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; maximum-value : List -> Integer"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; GIVEN : A list."
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; RETURNS : The maximum value in the list."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; STRATEGY : HOFC."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 13 #"maximum-value"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"list"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; no-of-days-till-fillable"
0 0 17 3 34 #" : Order Inventory -> MaybeInteger"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN : An order and an inventory"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; RETURNS : number of days iff the order is fillable"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : see test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; STRATEGY : HOFC"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 24 #"no-of-days-till-fillable"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 27 #";; ListItem -> MaybeInteger"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 23 #";; GIVEN : A list item "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 54 #";; RETURNS : Number of days iff the order is fillable."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"li"
0 0 24 3 3 #") ("
0 0 14 3 31 #"line-item-in-inventory-for-days"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 5 #"order"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; line-item-in-inventory-for-days : LineItem Inventory -> MaybeInte"
 #"ger"
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; GIVEN : A lineitem and an Inventory."
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; RETURNS : number of days iff the isbn of a line item matches the "
 #"inventory"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";;           book."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY : Function composition."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 31 #"line-item-in-inventory-for-days"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 13 #"compare-isbn?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 18 #"compare-no-of-days"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; compare-number-of-days : Order Inventory -> MaybeInteger"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN : An order and an Inventory"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; RETURNS : 0 if the number of books in the order are less than the"
 #" "
) 0 0 24 29 1 #"\n"
0 0 17 3 26 #";; books in the inventory."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; STRATEGY : Stuctural decomposition on invent : Inventory"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"compare-no-of-days"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 16 #"line-item-number"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #") ("
0 0 14 3 8 #"book-num"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-book"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 27 #"compare-with-reorder-status"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; compare-with-reorder-status : Order Inventory -> MaybeInteger"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN : an order and an Inventory"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURNS : false if inventory and the reordered books do not match"
 #" the"
) 0 0 24 29 1 #"\n"
0 0 17 3 23 #";; required no of books"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; will return the number of days if the condition is fulfilled."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; STRATEGY : Structural Decomposition on [Book]"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 27 #"compare-with-reorder-status"
0 0 24 3 1 #" "
0 0 14 3 3 #"ord"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 16 #"line-item-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"ord"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"book-num"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-book"
0 0 24 3 1 #" "
0 0 14 3 3 #"ord"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 20 #"get-number-of-copies"
0 0 24 3 1 #"("
0 0 14 3 18 #"book-reorderstatus"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-book"
0 0 24 3 1 #" "
0 0 14 3 3 #"ord"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 18 #"get-number-of-days"
0 0 24 3 1 #"("
0 0 14 3 18 #"book-reorderstatus"
0 0 24 3 2 #" ("
0 0 14 3 8 #"get-book"
0 0 24 3 1 #" "
0 0 14 3 3 #"ord"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"false"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 24 3 1 #" "
0 0 14 3 5 #"Order"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Order"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 57
#" cannot be completed check reorder status or order again\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 24 3 1 #" "
0 0 14 3 6 #"Order2"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Order"
0 0 19 3 1 #" "
0 0 19 29 1 #"\n"
0 0 19 3 30 #" should be fillable in 2 days\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 17 #"days-til-fillable"
0 0 24 3 1 #" "
0 0 14 3 6 #"Order1"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Order"
0 0 19 29 1 #"\n"
0 0 19 3 57
#" cannot be completed check reorder status or order again\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";; price-for-order : Inventory Order -> NonNegInt"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; GIVEN : An inventory and an order."
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; RETURNS : total price for the given order."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See test case below."
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; STRATEGY : HOFC."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"price-for-order"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"foldr"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 34 #";; LineItem NonNegInt -> NonNegInt"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 58
#";; GIVEN : Lineitem and price for each line item cumulated"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 63
#";; RETURNS : The price with the price for line item added to it"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 16 #"price-cumulative"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 16 #"price-cumulative"
0 0 24 3 2 #" ("
0 0 14 3 17 #"line-item-present"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; item-in-inventory? : LineItem Inventory -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; GIVEN : a lineitem and an Inventory"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; RETURNS : True iff the line item is present i"
0 0 17 3 16 #"n the inventory."
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Examples : See test case below"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY : Structural decomposition on book : Book "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"item-in-inventory?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 34 #";; compare-isbn? : Book -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 17 #";; GIVEN : A book"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 66
#";; RETURNS : True iff the isbn of the line item matches the book. "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"compare-isbn?"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"line-item-for-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 14 3 13 #"compare-isbn?"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; line-item-present : LineItem Inventory -> NonNegInt"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; GIVEN : Lineitem and inventory"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; RETURNS : Price for the line item if true "
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; 0 if the line item is not present in the inventory"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test case below. "
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY : Function composition."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"line-item-present"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 18 #"item-in-inventory?"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 19 #"price-for-line-item"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"price-for-order"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 1 #" "
0 0 14 3 6 #"Order1"
0 0 24 3 2 #") "
0 0 21 3 5 #"92550"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 35 #"\"Check price of each item properly\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 56 #";; inventory-after-order : Inventory Order -> Inventory."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; GIVEN: an inventory and an order"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; WHERE: the order is fillable now"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";; RETURNS:"
0 0 17 3 47 #" the inventory after the order has been filled."
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; EXAMPLES: See the test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; Strategy: HOFC."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"inventory-after-order"
0 0 24 3 1 #" "
0 0 14 3 6 #"invent"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 15 #";; book -> Book"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 17 #";; GIVEN : A book"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 44 #";; RETURNS : A Book updated after its order."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"book"
0 0 24 3 2 #")("
0 0 14 3 29 #"comparing-line-item-with-book"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 6 #"invent"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; comparing-isbn-for-inventory : Order Book -> Book"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; GIVEN : An order and a Book"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; RETURNS : a Book with an updated quantity in the inventory"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; after the order."
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Examples : See the test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; STRATEGY : Function Composition. "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 29 #"comparing-line-item-with-book"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 20 #"book-found-in-order?"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"making-the-book"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-lineitem"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 2 #") "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"book"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; get-lineitem : Book Order -> LineItem"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; GIVEN : A book and an order"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; RETURNS : A lineitem which has the matched isbn with the book."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY : function composition "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"get-lineitem"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"first"
0 0 24 3 2 #" ("
0 0 14 3 17 #"matched-line-item"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; matched-item : Book Order -> LineItem"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; GIVEN : A book and an order."
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; RETURNS : A lineitem which is present in the order"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; STRATEGY : Structural decomposition on book : Book"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; Examples : See test cases below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 17 #"matched-line-item"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 44 #";; compare-isbn? : Item Inventory -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 38 #";; GIVEN : A lineitem and an inventory"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 55 #";; RETURNS : True iff the isbn of the item matches the "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 17 3 25 #";; isbn of the inventory."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"    "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"compare-isbn-number?"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"line-item-for-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"item"
0 0 24 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"filter"
0 0 24 3 1 #" "
0 0 14 3 20 #"compare-isbn-number?"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; book-found-in-order? : Book Order -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; GIVEN : A book and an order"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS : true iff the line item ISBN matches ths isbn of the boo"
 #"k."
) 0 0 24 29 1 #"\n"
0 0 17 3 37 #";; Examples : See the tes case below."
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; STRATEGY : Structural decomposition on book : Book"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"book-found-in-order?"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #" "
0 0 14 3 5 #"order"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"ormap"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 22 #";; LineItem -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 22 #";; GIVEN : A line item"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 63
#";; RETURNS : true iff the book's isbn is present in the order. "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 1 #"("
0 0 14 3 2 #"li"
0 0 24 3 2 #")("
0 0 14 3 6 #"equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"line-item-for-isbn"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 3 #") ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 4 #"))) "
0 0 14 3 5 #"order"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; making-the-book : LineItem Book -> Book"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; GIVEN : A lineitem and a Book"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; RETURNS : The book with the updated quantity after the order."
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY : Structural decomposition on book : Book."
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Examples : See the test cases below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"making-the-book"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-book"
0 0 24 3 2 #" ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 10 #"book-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 11 #"book-author"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 14 #"book-publisher"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 15 #"book-unit-price"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 14 #"book-unit-cost"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 13 #"update-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 18 #"book-reorderstatus"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 9 #"book-cuft"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; update-number : LineItem Book -> Integer "
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; GIVEN : A lineitem and a book."
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURNS : Number of books after the order quantity is deducted."
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY : Structural decomposition on book : Book."
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Examples : See the test cases below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"update-number"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 8 #"book-num"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 21 #"quantity-of-line-item"
0 0 24 3 1 #" "
0 0 14 3 2 #"li"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 21 #"inventory-after-order"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 1 #" "
0 0 14 3 6 #"Order3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"HtDP/1\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Felleisen\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 4 #"1300"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"65488765"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"EOPL\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Wand\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"MIT Press\""
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"32154988"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Hamlet\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Shakespeare\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 4 #"1055"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 21 3 3 #"7.8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"64978561"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Macbeth\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Shakespeare\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"publication 2\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.3"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 27 #"\"Inventory after the order\""
0 0 24 3 3 #" ))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 55 #";; increase-prices : Inventory String Real -> Inventory"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; GIVEN: an inventory, a publisher, and a percentage of increase."
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; RETURNS: an inventory like the original, except that all items by"
 #" that"
) 0 0 24 29 1 #"\n"
0 0 17 3 62
#";; publisher have their unit prices increased by the specified"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; percentage."
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; STRATEGY : HOFC."
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; Examples: see test case below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"increase-prices"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #" "
0 0 14 3 7 #"publish"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 15 #";; Book -> Book"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 17 #";; GIVEN : A book"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 17 3 43 #";; RETURNS : A book with the updated price."
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 4 #"book"
0 0 24 3 2 #")("
0 0 14 3 19 #"comparing-publisher"
0 0 24 3 1 #" "
0 0 14 3 7 #"publish"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"   "
0 0 14 3 9 #"inventory"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; comparing-publisher : String Book Real -> Book"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; GIVEN : A book ,name of a publisher and the percentage increase o"
 #"f"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";;         the prices."
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURNS : a book with the price updated by the percentage given f"
 #"or the "
) 0 0 24 29 1 #"\n"
0 0 17 3 38 #";;           specified publisher only."
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY : Structural decomposition on book : Book."
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Examples : see the test case below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"comparing-publisher"
0 0 24 3 1 #" "
0 0 14 3 7 #"publish"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"string=?"
0 0 24 3 1 #" "
0 0 14 3 7 #"publish"
0 0 24 3 2 #" ("
0 0 14 3 14 #"book-publisher"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 9 #"make-book"
0 0 24 3 2 #" ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 10 #"book-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"book-author"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 14 #"book-publisher"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 12 #"update-price"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 14 #"book-unit-cost"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 8 #"book-num"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 18 #"book-reorderstatus"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 9 #"book-cuft"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 4 #"book"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; update-price : Integer Book -> PosInt"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; GIVEN : A book and percentage increase."
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; RETURNS : the updated price of the particular book."
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY : Structural decomposition on book : Book."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See test case below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"update-price"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"round"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 15 #"book-unit-price"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 7 #"percent"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.01"
0 0 24 3 2 #" ("
0 0 14 3 15 #"book-unit-price"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 15 #"increase-prices"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"HtDP/1\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Felleisen\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2200"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 4 #"1300"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"65488765"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"EOPL\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Wand\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"MIT Press\""
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 0 21 3 3 #"0.9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"32154988"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Hamlet\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Shakespeare\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 3 1 #" "
0 0 21 3 4 #"1160"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 0 21 3 3 #"7.8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"64978561"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Macbeth\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Shakespeare\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"publication 2\""
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 0 21 3 3 #"1.3"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 33 #"\"Inventory with increased prices\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 46 #";; reorder-present? : ReorderStatus -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";; RETURNS: true iff the given ReorderStatus shows a pending re-orde"
 #"r."
) 0 0 24 29 1 #"\n"
0 0 17 3 60
#";; STRATEGY : Structural decomposition on rs : ReorderStatus"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Examples : See the test case below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"reorder-present?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"false?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 8 #"reorder?"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"reorder-present?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #")) "
0 0 14 3 4 #"true"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Check"
0 0 19 29 1 #"\n"
0 0 19 3 16 #" Reorder Status\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 16 #"reorder-present?"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Check"
0 0 19 29 1 #"\n"
0 0 19 3 16 #" Reorder Status\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 44 #";; make-empty-reorder : Any -> ReorderStatus"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; Ignores its argument."
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; RETURNS: a ReorderStatus showing no pending re-order. "
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY : Function Composition."
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; Examples : see the test case below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-empty-reorder"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #"  "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 45 #";; make-line-item : PosInt PosInt -> LineItem"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; GIVEN : ISBN number and number of books ordered."
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; RETURNS : A lineitem"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; STRATEGY : Function composition."
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See test case below."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 14 #"make-line-item"
0 0 24 3 1 #" "
0 0 14 3 4 #"isbn"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 14 3 4 #"isbn"
0 0 24 3 1 #" "
0 0 14 3 3 #"num"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-empty-reorder"
0 0 24 3 2 #" ("
0 0 14 3 18 #"make-empty-reorder"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 19 3 22 #"\"Check Reorder Status\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 22 #"\"Check reorder status\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"make-line-item"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-lineitem"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
 #";;;;;;;;;;;;"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";; inventory-after-deliveries : Inventory -> Inventory"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; GIVEN: today's inventory"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURNS: an Inventory representing tomorrow's inventory, in which"
 #" all"
) 0 0 24 29 1 #"\n"
0 0 17 3 67
#";; reorders that were due in 1 day are now available, and all other"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; reorders have their expected times decreased by 1.  "
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; Examples : See test case below."
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; STRATEGY : HOFC"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 26 #"inventory-after-deliveries"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 19 #"reorder-status-book"
0 0 24 3 1 #" "
0 0 14 3 9 #"inventory"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; reorder-status-book : Book -> Book"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; GIVEN : A book"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; RETURNS : A book with the book quantity and book reorder status u"
 #"pdated"
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Examples : See the test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; STRATEGY : Structural decomposition on book : Book"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 19 #"reorder-status-book"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-book"
0 0 24 3 2 #" ("
0 0 14 3 9 #"book-isbn"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 10 #"book-title"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 11 #"book-author"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 14 #"book-publisher"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 15 #"book-unit-price"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 14 #"book-unit-cost"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 18 #"update-book-number"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #") "
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 21 #"update-reorder-status"
0 0 24 3 2 #" ("
0 0 14 3 18 #"book-reorderstatus"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 9 #"book-cuft"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; get-reorder-status : Book -> ReorderStatus"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; GIVEN : A book."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; RETURNS : The reorder status of the book."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #"("
0 0 14 3 18 #"get-reorder-status"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 18 #"book-reorderstatus"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; update-book-number : Book -> NonNegInt"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; GIVEN : A book."
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; RETURNS : the number of copies on-hand after reorder status is up"
 #"dated."
) 0 0 24 29 1 #"\n"
0 0 17 3 39 #";; Examples : See the test cases below."
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; STRATEGY : Structural Decomposition on book : Book "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"update-book-number"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-number-of-days"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-reorder-status"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #")) "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 8 #"book-num"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #") ("
0 0 14 3 20 #"get-number-of-copies"
0 0 24 3 2 #" ("
0 0 14 3 18 #"get-reorder-status"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 8 #"book-num"
0 0 24 3 1 #" "
0 0 14 3 4 #"book"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; update-reorder-status : ReorderStatus -> ReorderStatus"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; GIVEN : Reorderstatus of a book."
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; RETURNS : false if the reorder days become 0 else returns the upd"
 #"ated "
) 0 0 24 29 1 #"\n"
0 0 17 3 20 #";; reorder structure"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; STRATEGY : Structural decomposition on rs : ReorderStatus."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 21 #"update-reorder-status"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"reorder-days"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 12 #"reorder-days"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 14 #"reorder-copies"
0 0 24 3 1 #" "
0 0 14 3 2 #"rs"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 14 #"begin-for-test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"check-equal?"
0 0 24 3 2 #" ("
0 0 14 3 26 #"inventory-after-deliveries"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 26 #"inventory-after-deliveries"
0 0 24 3 1 #" "
0 0 14 3 9 #"Inventory"
0 0 24 3 3 #")) "
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"12345678"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"HtDP/1\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Felleisen\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 4 #"1300"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 6          10 73 4 #"1/2\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"65488765"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"EOPL\""
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Wand\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"MIT Press\""
0 0 24 3 1 #" "
0 0 21 3 4 #"5000"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 21 3 3 #"140"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 6          10 73 5 #"9/10\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"32154988"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Hamlet\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Shakespeare\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"publication\""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 4 #"1055"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 2 #"12"
0 0 24 3 2 #") "
0 6          10 73 5 #"39/5\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"make-book"
0 0 24 3 1 #" "
0 0 21 3 8 #"64978561"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Macbeth\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Shakespeare\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"publication 2\""
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                            "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-reorder"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 2 #") "
0 6          10 73 6 #"13/10\0"
1 #"\0"
8 #"decimal\0"
2 #"1\0"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0           0
